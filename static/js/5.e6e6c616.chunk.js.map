{"version":3,"sources":["containers/Admin/ImageUploader.js","components/Dialog/Dialog.js","containers/Admin/quillConfig.js","containers/Admin/ProductManager.js","containers/Admin/AbroadEdit.js","containers/Admin/Admin.js","firebase.js","components/Loader/Loader.js"],"names":["ImagesUpload","product","uploadedImage","register","useState","imageUrl","setImageUrl","useEffect","image","length","Blob","Promise","resolve","reject","reader","FileReader","onload","readyState","result","readAsDataURL","then","url","catch","err","console","log","style","display","alignItems","className","src","alt","type","ref","name","id","accept","htmlFor","marginRight","Dialog","setDialogContent","dialogContent","onClick","prevState","setWindowOpen","modules","toolbar","formats","categoriesOptions","links","map","link","key","path","value","slice","lastIndexOf","uploadTaskPromise","productId","file","a","uploadTask","fireStorage","child","put","on","snapshot","progress","bytesTransferred","totalBytes","error","getDownloadURL","downloadURL","ProductManager","action","useForm","handleSubmit","errors","watch","reset","defaultValues","todo","register2","watch2","editorValue","setEditorValue","productsOptions","setProductsOptions","productsInfo","setProductsInfo","subCatOptions","setSubCatOptions","subCatOptSelectedProd","setSubCatOptSelectedProd","currentProductId","setCurrentProductId","isLoading","setIsLoading","category","subcategory","selectedProductId","categorySelectedProd","onSubmit","data","productKey","fireDb","push","downloadUrl","updates","update","title","description","price","stock","priority","once","val","Object","keys","constructor","productsTemp","filter","required","forEach","includes","routes","subLink","paddingBottom","placeholder","padding","theme","onChange","window","confirm","refFromURL","delete","Loader","fullscreen","AbroadEdit","abroad","Admin","setError","clearErrors","isSignedIn","setIsSignedIn","actionComponent","fireAuth","onAuthStateChanged","user","signOut","authPersistence","email","password","persistence","firebase","auth","Auth","Persistence","LOCAL","NONE","setPersistence","signInWithEmailAndPassword","code","message","defaultChecked","login","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","database","storage"],"mappings":"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","file":"static/js/5.e6e6c616.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ImageUploader.css';\n\nconst ImagesUpload = ({ product, uploadedImage, register }) => {\n    const [imageUrl, setImageUrl] = useState();\n\n    useEffect(() => {\n        // If an image was uploaded by the user, it will be shown. otherwise, the current image in the storage will be shown.\n        if (uploadedImage && uploadedImage.length && uploadedImage[0] instanceof Blob) {\n            convertImageToBase64(uploadedImage[0])\n                .then(url => setImageUrl(url))\n                .catch(err => console.log(err))\n        } else if (product && product['image']) {\n            setImageUrl(product['image']);\n        } else {\n            setImageUrl('');\n        }\n    }, [product, uploadedImage])\n\n    return (\n        <div style = {{display: \"flex\", alignItems: 'flex-end'}}>\n            <div className='img-preview-container'>\n                <div className='img-placeholder'>\n                    אין תמונה\n                </div>\n                {imageUrl ? <img src={imageUrl} alt='preview' className='img-preview' /> : null}\n            </div>\n            <div>\n                <input type=\"file\" ref={register} name=\"image\" id=\"file\" className=\"inputfile\" accept=\"image/*\" />\n                <label htmlFor=\"file\" className=\"button\" style={{ display: 'inline-block', marginRight: '5px' }}> {imageUrl ? 'החלף תמונה' : 'העלאת תמונה'} </label>\n            </div>\n        </div>\n    );\n}\n\nexport default ImagesUpload;\n\n// This function gets an image and converts it to a url attachable to src attribute in img tags\nfunction convertImageToBase64(image) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                resolve(reader.result);\n            }\n        }\n        if (image instanceof Blob) {\n            reader.readAsDataURL(image)\n        } else {\n            reject(\"error - the function requires a Blob or File in order to convert to base64\");\n        }\n    });\n}","import React from 'react';\nimport Backdrop from '../BackDrop/BackDrop';\nimport './Dialog.css';\n\nconst Dialog = ({ setDialogContent, dialogContent }) => {\n    if (dialogContent) {\n        return (\n            <>\n                <div className='dialog'>\n                    <div >\n                        {dialogContent}\n                    </div>\n                    <button className='confirm' onClick={() => setDialogContent((prevState) => !prevState)} >אישור</button>\n                </div>\n                <Backdrop setWindowOpen={setDialogContent} />\n            </>\n        );\n    } else {\n        return null;\n    }\n\n}\n\nexport default Dialog;\n","const modules = {\n    toolbar: [\n        [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n        ['bold', 'italic', 'underline', 'strike'],\n        [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\n        [{ 'direction': 'rtl' }, { 'align': [] }],                         // text direction\n        [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\n        ['link', 'image', 'video'],\n        ['clean'],\n    ],\n}\n\nconst formats = [\n    'size',\n    'bold', 'italic', 'underline', 'strike',\n    'list', 'bullet', 'indent',\n    'link', 'image', 'video', 'direction',\n    'color', 'background', 'align'\n]\n\nexport { modules, formats }","import React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\"\nimport ReactQuill from 'react-quill';\nimport ImageUploader from './ImageUploader';\nimport Loader from '../../components/Loader/Loader';\nimport Dialog from '../../components/Dialog/Dialog';\nimport { links } from '../../links';\nimport { fireDb, fireStorage } from \"../../firebase\";\nimport { modules, formats } from './quillConfig'\nimport 'react-quill/dist/quill.snow.css';\nimport './Admin.css';\n\nconst categoriesOptions = links.map(link => <option key={link.path} value={link.path.slice(link.path.lastIndexOf('/') + 1)}>{link.name}</option>)\n\nconst ProductManager = ({ action }) => {\n\n    const { register, handleSubmit, errors, watch, reset } = useForm(); // The edited product form\n    const { register: register2, watch: watch2 } = useForm({ defaultValues: { todo: \"add\" } }); // The menu form\n\n    const [editorValue, setEditorValue] = useState(''); //Quill data\n    const [productsOptions, setProductsOptions] = useState([]) // The product's names to be shown in the select tag \n    const [productsInfo, setProductsInfo] = useState({}) // The information about all of the products fetched from firebase\n    const [subCatOptions, setSubCatOptions] = useState([]); // The sub categories options in the menu\n    const [subCatOptSelectedProd, setSubCatOptSelectedProd] = useState([]); // The sub categories options in the selected product\n    const [currentProductId, setCurrentProductId] = useState(); // The current edited product\n    const [isLoading, setIsLoading] = useState(false); // Loading indicator\n    const [dialogContent, setDialogContent] = useState(false); // Dialog handler\n\n    const category = watch2(\"category\");\n    const subcategory = watch2(\"subcategory\");\n    const selectedProductId = watch2(\"product-id\");\n    const categorySelectedProd = watch(\"category\");\n    const uploadedImage = watch(\"image\");\n\n    const onSubmit = async (data) => {\n        console.log(\"Upload proccess begun\");\n        setIsLoading(true);\n        let { image, ...product } = data;\n        let productKey = currentProductId;\n        if (!product.subcategory) { //if there is no sub category, the default will be 'sc' just to organize the data\n            product.subcategory = 'sc';\n        }\n        if (!productKey) { // if we are adding a new product and not editing, a new key will be generated.\n            productKey = fireDb.ref().child('products').push().key; // create a new product reference\n        }\n        if (image[0]) { // if there's an image it will be uploaded. The old image will be overwritten.\n            let downloadUrl = await uploadTaskPromise(productKey, image[0], 'image');\n            product.image = downloadUrl; // Add the downloadUrl to the new product's information\n        } else if (productsInfo[currentProductId] && productsInfo[currentProductId].image) { // if there isn't a new image, but there is an old image, keep the old one\n            product.image = productsInfo[currentProductId].image;\n        }\n        // Write the new products's data simultaneously in the products list and the quill list.\n        var updates = {};\n        updates['/products/' + productKey] = product;\n        updates['/quill/' + productKey] = editorValue;\n        fireDb.ref().update(updates, (error) => {\n            if (error) {\n                setIsLoading(false);\n                setDialogContent(\"תקלה :\" + error);\n            } else {\n                setIsLoading(false);\n                setDialogContent(\"ההעלאה בוצעה בהצלחה\");\n                if (!currentProductId) { //If it's a new product, make sure to reset all values after upload\n                    reset({}); //reset field values\n                    setEditorValue('<p class=\"ql-align-right ql-direction-rtl\"><br></p>'); //reset quill value\n                }\n                setCurrentProductId();\n            }\n        });\n    }\n\n    const deleteProduct = () => {\n        if (window.confirm(`אתה עומד למחוק את המוצר \"${productsInfo[currentProductId].title}\". האם אתה בטוח?`)) {\n            setIsLoading(true);\n            if (productsInfo[currentProductId] && productsInfo[currentProductId].image) {\n                fireStorage.refFromURL(productsInfo[currentProductId].image)\n                    .delete()\n                    .then(() => {\n                        console.log('image deleted successfully!')\n                    }).catch((error) => {\n                        console.log(\"error in deleting image:\" + error);\n                    });\n            }\n            let updates = {};\n            updates['/products/' + currentProductId] = null;\n            updates['/quill/' + currentProductId] = null;\n            setCurrentProductId(); // reset the current product id state\n            fireDb.ref().update(updates, (error) => { // delete the product\n                if (error) {\n                    setIsLoading(false);\n                    setDialogContent(\"תקלה :\" + error);\n                } else {\n                    setIsLoading(false);\n                    setDialogContent(\"המוצר נמחק בהצלחה\")\n                }\n            });\n        }\n    }\n\n    // After the current product id changes, we will change the fields accordingly\n    useEffect(() => {\n        if (currentProductId) {\n            const { title = '', description = '', price = 0, stock = 0, category = '', subcategory = '', priority = 0 } = productsInfo[currentProductId];\n            reset({ title, description, price, stock, category, subcategory, priority }); // insert product's values to the form fields\n            fireDb.ref(`quill/${currentProductId}`).once('value', snapshot => {\n                if (snapshot.val() != null) {\n                    setEditorValue(snapshot.val())\n                }\n            })\n        } else {\n            reset({}); //reset field values\n            setEditorValue('<p class=\"ql-align-right ql-direction-rtl\"><br></p>'); //reset quill value\n        }\n    }, [currentProductId, productsInfo, reset])\n\n\n    // This hook is used to fetch the information from firebase\n    useEffect(() => {\n        // make sure to only fetch the data from firebase if the user wants to update or delete AND it wasn't already fetched before\n        if (action === \"update product\" && Object.keys(productsInfo).length === 0 && productsInfo.constructor === Object) {\n            fireDb.ref().child('products').on('value', snapshot => {\n                if (snapshot.val() != null) {\n                    setProductsInfo({ ...snapshot.val() })\n                }\n            })\n        }\n        if (action === \"add product\") {\n            setCurrentProductId(); // reset the current product id\n        }\n    }, [action, productsInfo, reset])\n\n    // This hook is used to filter the relevant products in the select tag\n    useEffect(() => {\n        let productsTemp = Object.keys(productsInfo)\n            .filter((id) => (!category ||\n                (category === productsInfo[id].category && !subcategory) ||\n                subcategory === productsInfo[id].subcategory))\n            .map(id => <option key={id} value={id}>{productsInfo[id].title}</option>)\n        setProductsOptions(<>\n            <label>שם מוצר: </label>\n            <select name=\"product-id\" ref={register2({ required: true })}>\n                {productsTemp}\n            </select>\n        </>);\n    }, [category, subcategory, productsInfo, register2])\n\n    // This hook is used to build the sub categories list\n    useEffect(() => {\n        links.forEach((link) => {\n            if (link.path.includes(category)) {\n                if (link.routes.length) {\n                    setSubCatOptions(<>\n                        <label>תת קטגוריה: </label>\n                        <select name=\"subcategory\" ref={register2({ required: true })}>\n                            {link.routes.map(subLink => <option key={subLink.path} value={subLink.path.slice(subLink.path.lastIndexOf('/') + 1)}>{subLink.name}</option>)}\n                        </select>\n                    </>\n                    )\n                } else {\n                    setSubCatOptions([]);\n                }\n            }\n        })\n    }, [category, register2])\n\n    // This hook is used to build the sub categories list in the selected product\n    useEffect(() => {\n        links.forEach((link) => {\n            if (link.path.includes(categorySelectedProd)) {\n                if (link.routes.length) {\n                    setSubCatOptSelectedProd(<>\n                        <label> תת קטגוריה:  </label>\n                        <select name=\"subcategory\" ref={register({ required: true })}>\n                            {link.routes.map(subLink => <option key={subLink.path} value={subLink.path.slice(subLink.path.lastIndexOf('/') + 1)}>{subLink.name}</option>)}\n                        </select>\n                    </>\n                    )\n                } else {\n                    setSubCatOptSelectedProd([]);\n                }\n            }\n        })\n    }, [categorySelectedProd, register])\n\n    return (\n        <article>\n            <Dialog dialogContent={dialogContent} setDialogContent={setDialogContent} />\n            <form className=\"form--compressed\">\n                {action === \"update product\" ?\n                    <>\n                        <h3>בחירת מוצר לעריכה/מחיקה</h3>\n                        <label>קטגוריה: </label>\n                        <select name=\"category\" ref={register2({ required: true })}>\n                            {categoriesOptions}\n                        </select>\n                        {subCatOptions}\n                        {productsOptions}\n                        <div>\n                            <button className='button green' type='button' onClick={() => setCurrentProductId(selectedProductId)}>ערוך מוצר נבחר</button>\n                        </div>\n                    </>\n                    : null}\n            </form>\n            {(action === 'update product' && !currentProductId) ? null : // If you chose update and there's no current product, dont show the form\n                <form onSubmit={handleSubmit(onSubmit)} className='form'>\n                    <h2 style={{ paddingBottom: '10px' }}>{currentProductId ? `עדכון מוצר \"${productsInfo[currentProductId].title}\"` : \"הוספת מוצר\"}</h2>\n                    <label>כותרת</label>\n                    <input type=\"text\" name=\"title\" ref={register({ required: true })} placeholder=\"כותרת\" />\n                    {errors.title && <span className=\"error\">יש להכניס כותרת</span>}\n                    <label>מחיר</label>\n                    <input type='number' name=\"price\" ref={register({ required: true })} placeholder=\"מחיר\" />\n                    {errors.price && <span className=\"error\">יש לציין מחיר. כדי שיופיע \"צור קשר לקבלת מחיר\", יש לציין מחיר 0</span>}\n                    <label>מחיר מבצע</label>\n                    <input type='number' name=\"discount\" ref={register} placeholder=\"מחיר מבצע\" />\n                    <label>תיאור</label>\n                    <textarea name=\"description\" ref={register} placeholder=\"תיאור\" />\n                    <label>קטגוריה</label>\n                    <select name=\"category\" ref={register({ required: true })}>\n                        {categoriesOptions}\n                    </select>\n                    {subCatOptSelectedProd}\n                    <label>מלאי</label>\n                    <input type='number' name=\"stock\" ref={register({ required: true })} placeholder=\"מלאי\" />\n                    {errors.stock && <span className=\"error\">יש להכניס מספר מוצרים במלאי</span>}\n                    <label> עדיפות (מוצר בעל ערך גבוה יוצג יותר למעלה)</label>\n                    <input type='number' name=\"priority\" ref={register} placeholder=\"עדיפות\" />\n                    <label>תמונה</label>\n                    <ImageUploader product={productsInfo[currentProductId]} uploadedImage={uploadedImage} register={register} />\n                    <label style={{ padding: '5px 0px 7px' }}>מידע נוסף</label>\n                    <ReactQuill theme=\"snow\" value={editorValue} onChange={setEditorValue} modules={modules} formats={formats} />\n                    <div>\n                        <input type=\"submit\" value={action === 'add product' ? \"העלה מוצר\" : \"שמור שינויים\"} className='button green big' />\n                        {currentProductId ? <button className='button red big' type='button' onClick={deleteProduct}>מחק מוצר</button> : null}\n                    </div>\n                </form>}\n            {isLoading ? <Loader fullscreen /> : null}\n        </article>\n    );\n}\n\n// This function uploads an image to firebase and returns the download url\nasync function uploadTaskPromise(productId, file, name) {\n    return new Promise(function (resolve, reject) {\n        //Now we will upload the image and return the download url\n        let uploadTask = fireStorage.ref().child(`products/${productId}/${name}.png`).put(file); // upload \n        uploadTask.on('state_changed', (snapshot) => {\n            let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            console.log('Upload is ' + progress + '% done');\n        }, (error) => {\n            console.log(error)\n            reject();\n        }, () => { //Success\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                console.log('Uploaded image available at', downloadURL);\n                resolve(downloadURL)\n            });\n        })\n    });\n}\n\nexport default ProductManager;","import React, { useState, useEffect } from 'react';\nimport ReactQuill from 'react-quill';\nimport { fireDb } from '../../firebase'\nimport Loader from '../../components/Loader/Loader';\nimport Dialog from '../../components/Dialog/Dialog';\nimport { modules, formats } from './quillConfig'\nimport 'react-quill/dist/quill.snow.css';\nimport './Admin.css';\n\nconst AbroadEdit = () => {\n    const [editorValue, setEditorValue] = useState('<p class=\"ql-align-right ql-direction-rtl\"><br></p>'); //Quill data\n    const [isLoading, setIsLoading] = useState(false); // Loading indicator\n    const [dialogContent, setDialogContent] = useState(false); // Dialog handler\n\n    const onSubmit = () => {\n        setIsLoading(true)\n        let abroadRef = fireDb.ref()\n        abroadRef.update({ abroad: editorValue }, (error) => {\n            if (error) {\n                setIsLoading(false);\n                setDialogContent(\"תקלה :\" + error);\n            } else {\n                setIsLoading(false);\n                setDialogContent(\"העדכון בוצע בהצלחה\");\n            }\n        });\n    }\n\n\n    // reset the quill data to the current data\n    useEffect(() => {\n        fireDb.ref(`abroad`).on('value', snapshot => {\n            if (snapshot.val() != null) {\n                setEditorValue(snapshot.val())\n            }\n        })\n    }, [])\n\n\n    return (\n        <article className='abroad-edit'>\n            <div>\n                <ReactQuill theme=\"snow\" value={editorValue} onChange={setEditorValue} modules={modules} formats={formats} />\n                <button className='button green big' onClick={() => onSubmit()}>עדכן</button>\n            </div>\n            {isLoading ? <Loader fullscreen /> : null}\n            <Dialog dialogContent={dialogContent} setDialogContent={setDialogContent} />\n        </article>\n    );\n}\n\n\nexport default AbroadEdit;\n","import React, { useState, useEffect } from 'react';\nimport { fireAuth, firebase } from '../../firebase'\nimport { useForm } from \"react-hook-form\";\nimport Loader from '../../components/Loader/Loader';\nimport ProductManager from './ProductManager';\nimport AbroadEdit from './AbroadEdit';\nimport './Admin.css';\n\nconst Admin = () => {\n    const { register, handleSubmit, errors, setError, clearErrors } = useForm();\n    const { register: register2, watch: watch2 } = useForm(); // The menu form\n    const [isSignedIn, setIsSignedIn] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const action = watch2(\"action\");\n    let actionComponent = null;\n\n    const onSubmit = ({ email, password, persistence }) => {\n        setIsLoading(true);\n        let authPersistence;\n        if (persistence === true) {\n            authPersistence = firebase.auth.Auth.Persistence.LOCAL;\n        } else {\n            authPersistence = firebase.auth.Auth.Persistence.NONE\n        }\n        fireAuth.setPersistence(authPersistence)\n            .then(() => fireAuth.signInWithEmailAndPassword(email, password))\n            .then(setIsLoading(false))\n            .catch((error) => {\n                console.log(`Error code: ${error.code}`);\n                console.log(`Error message: ${error.message}`)\n                setError(\"login\", {\n                    type: \"manual\",\n                    message: \"אימייל או סיסמה שגויים\"\n                });\n            });\n    }\n\n    const signOut = () => {\n        fireAuth.signOut().then(function () {\n            console.log('signed out successfully')\n        }).catch(function (error) {\n            console.log(error)\n        });\n    }\n\n    useEffect(() => {\n        fireAuth.onAuthStateChanged(function (user) {\n            if (user) {\n                console.log('You are logged in!')\n                setIsSignedIn(user);\n            } else {\n                console.log('No user is logged in.')\n                setIsSignedIn(false);\n            }\n        });\n    }, [])\n\n    if (action === \"add product\" || action === \"update product\")\n        actionComponent = <ProductManager action={action} />\n    else if (action === \"set rally abroad\")\n        actionComponent = <AbroadEdit />\n\n\n    if (isSignedIn) {\n        return (\n            <article className='page-container'>\n                <h2>עמוד מנהל</h2>\n                <button className='button' onClick={signOut}>התנתק</button>\n                <form className=\"form--compressed\">\n                    <input name=\"action\" type=\"radio\" value=\"add product\" ref={register2} />\n                    <label>מוצר חדש</label>\n                    <input name=\"action\" type=\"radio\" value=\"update product\" ref={register2} />\n                    <label>עריכת מוצר</label>\n                    <input name=\"action\" type=\"radio\" value=\"set rally abroad\" ref={register2} />\n                    <label>עריכת תוכן ראליים בחו\"ל</label>\n                </form>\n                {actionComponent}\n            </article>\n        );\n    } else {\n        return (\n            <article className='page-container'>\n                <form onSubmit={handleSubmit(onSubmit)} className='form small'>\n                    <h2 style={{ padding: '0px 0px 10px' }}>כניסת מנהל</h2>\n                    <label>אימייל</label>\n                    <input type=\"text\" name=\"email\" ref={register({ required: true })} placeholder=\"אימייל\" />\n                    {errors.email && <span className=\"error\">יש להכניס אימייל</span>}\n                    <label>סיסמא</label>\n                    <input type='password' name=\"password\" ref={register({ required: true })} placeholder=\"סיסמא\" />\n                    {errors.password && <span className=\"error\">יש להכניס סיסמא</span>}\n                    <div>\n                        <input type=\"checkbox\" name=\"persistence\" defaultChecked={true} ref={register} />\n                        <label>הישאר מחובר</label>\n                    </div>\n                    {isLoading ?\n                        <Loader />\n                        : <input type=\"submit\" value=\"התחבר\" className=\"button\" onClick={() => clearErrors(\"login\")} />\n                    }\n                    {errors.login && <span className=\"error\">{errors.login.message}</span>}\n                </form>\n            </article>\n        );\n    }\n}\n\n\nexport default Admin;\n","import firebase from \"firebase/app\";\r\nimport \"firebase/database\"\r\nimport \"firebase/analytics\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/storage\"\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nlet firebaseConfigProduction = {\r\n    apiKey: \"AIzaSyDukwIPf4Dq16dqVbw4SeoyWugUnPIhYFE\",\r\n    authDomain: \"rally-trip.firebaseapp.com\",\r\n    databaseURL: \"https://rally-trip.firebaseio.com\",\r\n    projectId: \"rally-trip\",\r\n    storageBucket: \"rally-trip.appspot.com\",\r\n    messagingSenderId: \"981127527542\",\r\n    appId: \"1:981127527542:web:d6bee115407fff00b1f357\",\r\n    measurementId: \"G-3Q5HDZ04H2\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfigProduction);\r\nfirebase.analytics();\r\n\r\n// let firebaseConfigDevelopment = {\r\n//     apiKey: \"AIzaSyB2sTZWeYTKMQmoyMWKNr8pYil0ZOkrUrk\",\r\n//     authDomain: \"rally-trip-dev.firebaseapp.com\",\r\n//     databaseURL: \"https://rally-trip-dev.firebaseio.com\",\r\n//     projectId: \"rally-trip-dev\",\r\n//     storageBucket: \"rally-trip-dev.appspot.com\",\r\n//     messagingSenderId: \"45699978518\",\r\n//     appId: \"1:45699978518:web:e9ec13a6261e93ccafac37\",\r\n//     measurementId: \"G-RDDKEQ1EN7\"\r\n//   };\r\n\r\n// // Initialize Firebase\r\n// firebase.initializeApp(firebaseConfigDevelopment);\r\n// firebase.analytics();\r\n\r\nlet fireDb = firebase.database();\r\nlet fireAuth = firebase.auth();\r\nlet fireStorage = firebase.storage();\r\n\r\nexport { firebase, fireDb, fireAuth, fireStorage };","import React from 'react';\nimport Backdrop from '../BackDrop/BackDrop';\nimport './Loader.css';\n\n\nconst Loader = ({ fullscreen }) => {\n    if (fullscreen) {\n        return (\n            <>\n                <div className='loader fullscreen' > </div>\n                <Backdrop />\n            </>\n        );\n    } else {\n        return (\n            <div className='loader' />\n        );\n    }\n\n}\n\nexport default Loader;\n"],"sourceRoot":""}