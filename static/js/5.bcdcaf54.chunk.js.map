{"version":3,"sources":["containers/Admin/ImageUploader.js","components/Dialog/Dialog.js","containers/Admin/quillConfig.js","containers/Admin/ProductManager.js","containers/Admin/AbroadEdit.js","containers/Admin/Admin.js","firebase.js","components/Loader/Loader.js"],"names":["ImagesUpload","product","uploadedImage","register","useState","imageUrl","setImageUrl","useEffect","image","length","Blob","Promise","resolve","reject","reader","FileReader","onload","readyState","result","readAsDataURL","then","url","catch","err","console","log","style","display","alignItems","className","src","alt","type","ref","name","id","accept","htmlFor","marginRight","Dialog","setDialogContent","dialogContent","onClick","prevState","setWindowOpen","modules","toolbar","formats","categoriesOptions","links","map","link","value","path","slice","lastIndexOf","uploadTaskPromise","productId","file","a","uploadTask","fireStorage","child","put","on","snapshot","progress","bytesTransferred","totalBytes","error","getDownloadURL","downloadURL","ProductManager","action","useForm","handleSubmit","errors","watch","reset","defaultValues","todo","register2","watch2","editorValue","setEditorValue","productsOptions","setProductsOptions","productsInfo","setProductsInfo","subCatOptions","setSubCatOptions","subCatOptSelectedProd","setSubCatOptSelectedProd","currentProductId","setCurrentProductId","isLoading","setIsLoading","category","subcategory","selectedProductId","categorySelectedProd","onSubmit","data","productKey","fireDb","push","key","downloadUrl","updates","update","title","description","price","stock","priority","hide","once","val","Object","keys","constructor","productsTemp","filter","required","forEach","includes","routes","subLink","paddingBottom","placeholder","padding","theme","onChange","window","confirm","refFromURL","delete","Loader","fullscreen","AbroadEdit","abroad","Admin","setError","clearErrors","isSignedIn","setIsSignedIn","actionComponent","fireAuth","onAuthStateChanged","user","signOut","authPersistence","email","password","persistence","firebase","auth","Auth","Persistence","LOCAL","NONE","setPersistence","signInWithEmailAndPassword","code","message","defaultChecked","login","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","database","storage"],"mappings":"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","file":"static/js/5.bcdcaf54.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ImageUploader.css';\n\nconst ImagesUpload = ({ product, uploadedImage, register }) => {\n    const [imageUrl, setImageUrl] = useState();\n\n    useEffect(() => {\n        // If an image was uploaded by the user, it will be shown. otherwise, the current image in the storage will be shown.\n        if (uploadedImage && uploadedImage.length && uploadedImage[0] instanceof Blob) {\n            convertImageToBase64(uploadedImage[0])\n                .then(url => setImageUrl(url))\n                .catch(err => console.log(err))\n        } else if (product && product['image']) {\n            setImageUrl(product['image']);\n        } else {\n            setImageUrl('');\n        }\n    }, [product, uploadedImage])\n\n    return (\n        <div style = {{display: \"flex\", alignItems: 'flex-end'}}>\n            <div className='img-preview-container'>\n                <div className='img-placeholder'>\n                    אין תמונה\n                </div>\n                {imageUrl ? <img src={imageUrl} alt='preview' className='img-preview' /> : null}\n            </div>\n            <div>\n                <input type=\"file\" ref={register} name=\"image\" id=\"file\" className=\"inputfile\" accept=\"image/*\" />\n                <label htmlFor=\"file\" className=\"button\" style={{ display: 'inline-block', marginRight: '5px' }}> {imageUrl ? 'החלף תמונה' : 'העלאת תמונה'} </label>\n            </div>\n        </div>\n    );\n}\n\nexport default ImagesUpload;\n\n// This function gets an image and converts it to a url attachable to src attribute in img tags\nfunction convertImageToBase64(image) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                resolve(reader.result);\n            }\n        }\n        if (image instanceof Blob) {\n            reader.readAsDataURL(image)\n        } else {\n            reject(\"error - the function requires a Blob or File in order to convert to base64\");\n        }\n    });\n}","import React from 'react';\nimport Backdrop from '../BackDrop/BackDrop';\nimport './Dialog.css';\n\nconst Dialog = ({ setDialogContent, dialogContent }) => {\n    if (dialogContent) {\n        return (\n            <>\n                <div className='dialog'>\n                    <div >\n                        {dialogContent}\n                    </div>\n                    <button className='confirm' onClick={() => setDialogContent((prevState) => !prevState)} >אישור</button>\n                </div>\n                <Backdrop setWindowOpen={setDialogContent} />\n            </>\n        );\n    } else {\n        return null;\n    }\n\n}\n\nexport default Dialog;\n","const modules = {\n    toolbar: [\n        [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n        ['bold', 'italic', 'underline', 'strike'],\n        [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\n        [{ 'direction': 'rtl' }, { 'align': [] }],                         // text direction\n        [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\n        ['link', 'image', 'video'],\n        ['clean'],\n    ],\n}\n\nconst formats = [\n    'size',\n    'bold', 'italic', 'underline', 'strike',\n    'list', 'bullet', 'indent',\n    'link', 'image', 'video', 'direction',\n    'color', 'background', 'align'\n]\n\nexport { modules, formats }","import React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\"\nimport ReactQuill from 'react-quill';\nimport ImageUploader from './ImageUploader';\nimport Loader from '../../components/Loader/Loader';\nimport Dialog from '../../components/Dialog/Dialog';\nimport { links } from '../../links';\nimport { fireDb, fireStorage } from \"../../firebase\";\nimport { modules, formats } from './quillConfig'\nimport 'react-quill/dist/quill.snow.css';\nimport './Admin.css';\n\nconst categoriesOptions = links.map(link => <option key={link.path} value={link.path.slice(link.path.lastIndexOf('/') + 1)}>{link.name}</option>)\n\nconst ProductManager = ({ action }) => {\n\n    const { register, handleSubmit, errors, watch, reset } = useForm(); // The edited product form\n    const { register: register2, watch: watch2 } = useForm({ defaultValues: { todo: \"add\" } }); // The menu form\n\n    const [editorValue, setEditorValue] = useState(''); //Quill data\n    const [productsOptions, setProductsOptions] = useState([]) // The product's names to be shown in the select tag \n    const [productsInfo, setProductsInfo] = useState({}) // The information about all of the products fetched from firebase\n    const [subCatOptions, setSubCatOptions] = useState([]); // The sub categories options in the menu\n    const [subCatOptSelectedProd, setSubCatOptSelectedProd] = useState([]); // The sub categories options in the selected product\n    const [currentProductId, setCurrentProductId] = useState(); // The current edited product\n    const [isLoading, setIsLoading] = useState(false); // Loading indicator\n    const [dialogContent, setDialogContent] = useState(false); // Dialog handler\n\n    const category = watch2(\"category\");\n    const subcategory = watch2(\"subcategory\");\n    const selectedProductId = watch2(\"product-id\");\n    const categorySelectedProd = watch(\"category\");\n    const uploadedImage = watch(\"image\");\n\n    const onSubmit = async (data) => {\n        console.log(\"Upload proccess begun\");\n        setIsLoading(true);\n        let { image, ...product } = data;\n        let productKey = currentProductId;\n        if (!product.subcategory) { //if there is no sub category, the default will be 'sc' just to organize the data\n            product.subcategory = 'sc';\n        }\n        if (!productKey) { // if we are adding a new product and not editing, a new key will be generated.\n            productKey = fireDb.ref().child('products').push().key; // create a new product reference\n        }\n        if (image[0]) { // if there's an image it will be uploaded. The old image will be overwritten.\n            let downloadUrl = await uploadTaskPromise(productKey, image[0], 'image');\n            product.image = downloadUrl; // Add the downloadUrl to the new product's information\n        } else if (productsInfo[currentProductId] && productsInfo[currentProductId].image) { // if there isn't a new image, but there is an old image, keep the old one\n            product.image = productsInfo[currentProductId].image;\n        }\n        // Write the new products's data simultaneously in the products list and the quill list.\n        var updates = {};\n        updates['/products/' + productKey] = product;\n        updates['/quill/' + productKey] = editorValue;\n        fireDb.ref().update(updates, (error) => {\n            if (error) {\n                setIsLoading(false);\n                setDialogContent(\"תקלה :\" + error);\n            } else {\n                setIsLoading(false);\n                setDialogContent(\"ההעלאה בוצעה בהצלחה\");\n                if (!currentProductId) { //If it's a new product, make sure to reset all values after upload\n                    reset({}); //reset field values\n                    setEditorValue('<p class=\"ql-align-right ql-direction-rtl\"><br></p>'); //reset quill value\n                }\n                setCurrentProductId();\n            }\n        });\n    }\n\n    const deleteProduct = () => {\n        if (window.confirm(`אתה עומד למחוק את המוצר \"${productsInfo[currentProductId].title}\". האם אתה בטוח?`)) {\n            setIsLoading(true);\n            if (productsInfo[currentProductId] && productsInfo[currentProductId].image) {\n                fireStorage.refFromURL(productsInfo[currentProductId].image)\n                    .delete()\n                    .then(() => {\n                        console.log('image deleted successfully!')\n                    }).catch((error) => {\n                        console.log(\"error in deleting image:\" + error);\n                    });\n            }\n            let updates = {};\n            updates['/products/' + currentProductId] = null;\n            updates['/quill/' + currentProductId] = null;\n            setCurrentProductId(); // reset the current product id state\n            fireDb.ref().update(updates, (error) => { // delete the product\n                if (error) {\n                    setIsLoading(false);\n                    setDialogContent(\"תקלה :\" + error);\n                } else {\n                    setIsLoading(false);\n                    setDialogContent(\"המוצר נמחק בהצלחה\")\n                }\n            });\n        }\n    }\n\n    // After the current product id changes, we will change the fields accordingly\n    useEffect(() => {\n        if (currentProductId) {\n            const { title = '', description = '', price = 0, stock = 0, category = '', subcategory = '', priority = 0, hide = false } = productsInfo[currentProductId];\n            reset({ title, description, price, stock, category, subcategory, priority, hide }); // insert product's values to the form fields\n            fireDb.ref(`quill/${currentProductId}`).once('value', snapshot => {\n                if (snapshot.val() != null) {\n                    setEditorValue(snapshot.val())\n                }\n            })\n        } else {\n            reset({}); //reset field values\n            setEditorValue('<p class=\"ql-align-right ql-direction-rtl\"><br></p>'); //reset quill value\n        }\n    }, [currentProductId, productsInfo, reset])\n\n\n    // This hook is used to fetch the information from firebase\n    useEffect(() => {\n        // make sure to only fetch the data from firebase if the user wants to update or delete AND it wasn't already fetched before\n        if (action === \"update product\" && Object.keys(productsInfo).length === 0 && productsInfo.constructor === Object) {\n            fireDb.ref().child('products').on('value', snapshot => {\n                if (snapshot.val() != null) {\n                    setProductsInfo({ ...snapshot.val() })\n                }\n            })\n        }\n        if (action === \"add product\") {\n            setCurrentProductId(); // reset the current product id\n        }\n    }, [action, productsInfo, reset])\n\n    // This hook is used to filter the relevant products in the select tag\n    useEffect(() => {\n        let productsTemp = Object.keys(productsInfo)\n            .filter((id) => (!category ||\n                (category === productsInfo[id].category && !subcategory) ||\n                subcategory === productsInfo[id].subcategory))\n            .map(id => <option key={id} value={id}>{productsInfo[id].title}</option>)\n        setProductsOptions(<>\n            <label>שם מוצר: </label>\n            <select name=\"product-id\" ref={register2({ required: true })}>\n                {productsTemp}\n            </select>\n        </>);\n    }, [category, subcategory, productsInfo, register2])\n\n    // This hook is used to build the sub categories list\n    useEffect(() => {\n        links.forEach((link) => {\n            if (link.path.includes(category)) {\n                if (link.routes.length) {\n                    setSubCatOptions(<>\n                        <label>תת קטגוריה: </label>\n                        <select name=\"subcategory\" ref={register2({ required: true })}>\n                            {link.routes.map(subLink => <option key={subLink.path} value={subLink.path.slice(subLink.path.lastIndexOf('/') + 1)}>{subLink.name}</option>)}\n                        </select>\n                    </>\n                    )\n                } else {\n                    setSubCatOptions([]);\n                }\n            }\n        })\n    }, [category, register2])\n\n    // This hook is used to build the sub categories list in the selected product\n    useEffect(() => {\n        links.forEach((link) => {\n            if (link.path.includes(categorySelectedProd)) {\n                if (link.routes.length) {\n                    setSubCatOptSelectedProd(<>\n                        <label> תת קטגוריה:  </label>\n                        <select name=\"subcategory\" ref={register({ required: true })}>\n                            {link.routes.map(subLink => <option key={subLink.path} value={subLink.path.slice(subLink.path.lastIndexOf('/') + 1)}>{subLink.name}</option>)}\n                        </select>\n                        {errors.subcategory && <span className=\"error\">יש לציין תת קטגוריה</span>}\n                    </>\n                    )\n                } else {\n                    setSubCatOptSelectedProd([]);\n                }\n            }\n        })\n    }, [categorySelectedProd, register, errors.subcategory])\n\n    return (\n        <article>\n            <Dialog dialogContent={dialogContent} setDialogContent={setDialogContent} />\n            <form className=\"form--compressed\">\n                {action === \"update product\" ?\n                    <>\n                        <h3>בחירת מוצר לעריכה/מחיקה</h3>\n                        <label>קטגוריה: </label>\n                        <select name=\"category\" ref={register2({ required: true })}>\n                            {categoriesOptions}\n                        </select>\n                        {subCatOptions}\n                        {productsOptions}\n                        <div>\n                            <button className='button green' type='button' onClick={() => setCurrentProductId(selectedProductId)}>ערוך מוצר נבחר</button>\n                        </div>\n                    </>\n                    : null}\n            </form>\n            {(action === 'update product' && !currentProductId) ? null : // If you chose update and there's no current product, dont show the form\n                <form onSubmit={handleSubmit(onSubmit)} className='form'>\n                    <h2 style={{ paddingBottom: '10px' }}>{currentProductId ? `עדכון מוצר \"${productsInfo[currentProductId].title}\"` : \"הוספת מוצר\"}</h2>\n                    <label>כותרת</label>\n                    <input type=\"text\" name=\"title\" ref={register({ required: true })} placeholder=\"כותרת\" />\n                    {errors.title && <span className=\"error\">יש להכניס כותרת</span>}\n                    <label>מחיר</label>\n                    <input type='number' name=\"price\" ref={register({ required: true })} placeholder=\"מחיר\" />\n                    {errors.price && <span className=\"error\">יש לציין מחיר. כדי שיופיע \"צור קשר לקבלת מחיר\", יש לציין מחיר 0</span>}\n                    <label>מחיר מבצע</label>\n                    <input type='number' name=\"discount\" ref={register} placeholder=\"מחיר מבצע\" />\n                    <label>תיאור</label>\n                    <textarea name=\"description\" ref={register} placeholder=\"תיאור\" />\n                    <label>קטגוריה</label>\n                    <select name=\"category\" ref={register({ required: true })}>\n                        {categoriesOptions}\n                    </select>\n                    {subCatOptSelectedProd}\n                    <label>מלאי</label>\n                    <input type='number' name=\"stock\" ref={register({ required: true })} placeholder=\"מלאי\" />\n                    {errors.stock && <span className=\"error\">יש להכניס מספר מוצרים במלאי</span>}\n                    <label> עדיפות (מוצר בעל ערך גבוה יוצג יותר למעלה)</label>\n                    <input type='number' name=\"priority\" ref={register} placeholder=\"עדיפות\" />\n                    <label> הסתר מוצר </label>\n                    <input type='checkbox' name='hide' ref={register} />\n                    <label>תמונה</label>\n                    <ImageUploader product={productsInfo[currentProductId]} uploadedImage={uploadedImage} register={register} />\n                    <label style={{ padding: '5px 0px 7px' }}>מידע נוסף</label>\n                    <ReactQuill theme=\"snow\" value={editorValue} onChange={setEditorValue} modules={modules} formats={formats} />\n                    <div>\n                        <input type=\"submit\" value={action === 'add product' ? \"העלה מוצר\" : \"שמור שינויים\"} className='button green big' />\n                        {currentProductId ? <button className='button red big' type='button' onClick={deleteProduct}>מחק מוצר</button> : null}\n                    </div>\n                </form>}\n            {isLoading ? <Loader fullscreen /> : null}\n        </article>\n    );\n}\n\n// This function uploads an image to firebase and returns the download url\nasync function uploadTaskPromise(productId, file, name) {\n    return new Promise(function (resolve, reject) {\n        //Now we will upload the image and return the download url\n        let uploadTask = fireStorage.ref().child(`products/${productId}/${name}.png`).put(file); // upload \n        uploadTask.on('state_changed', (snapshot) => {\n            let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            console.log('Upload is ' + progress + '% done');\n        }, (error) => {\n            console.log(error)\n            reject();\n        }, () => { //Success\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                console.log('Uploaded image available at', downloadURL);\n                resolve(downloadURL)\n            });\n        })\n    });\n}\n\nexport default ProductManager;","import React, { useState, useEffect } from 'react';\nimport ReactQuill from 'react-quill';\nimport { fireDb } from '../../firebase'\nimport Loader from '../../components/Loader/Loader';\nimport Dialog from '../../components/Dialog/Dialog';\nimport { modules, formats } from './quillConfig'\nimport 'react-quill/dist/quill.snow.css';\nimport './Admin.css';\n\nconst AbroadEdit = () => {\n    const [editorValue, setEditorValue] = useState('<p class=\"ql-align-right ql-direction-rtl\"><br></p>'); //Quill data\n    const [isLoading, setIsLoading] = useState(false); // Loading indicator\n    const [dialogContent, setDialogContent] = useState(false); // Dialog handler\n\n    const onSubmit = () => {\n        setIsLoading(true)\n        let abroadRef = fireDb.ref()\n        abroadRef.update({ abroad: editorValue }, (error) => {\n            if (error) {\n                setIsLoading(false);\n                setDialogContent(\"תקלה :\" + error);\n            } else {\n                setIsLoading(false);\n                setDialogContent(\"העדכון בוצע בהצלחה\");\n            }\n        });\n    }\n\n\n    // reset the quill data to the current data\n    useEffect(() => {\n        fireDb.ref(`abroad`).on('value', snapshot => {\n            if (snapshot.val() != null) {\n                setEditorValue(snapshot.val())\n            }\n        })\n    }, [])\n\n\n    return (\n        <article className='abroad-edit'>\n            <div>\n                <ReactQuill theme=\"snow\" value={editorValue} onChange={setEditorValue} modules={modules} formats={formats} />\n                <button className='button green big' onClick={() => onSubmit()}>עדכן</button>\n            </div>\n            {isLoading ? <Loader fullscreen /> : null}\n            <Dialog dialogContent={dialogContent} setDialogContent={setDialogContent} />\n        </article>\n    );\n}\n\n\nexport default AbroadEdit;\n","import React, { useState, useEffect } from 'react';\nimport { fireAuth, firebase } from '../../firebase'\nimport { useForm } from \"react-hook-form\";\nimport Loader from '../../components/Loader/Loader';\nimport ProductManager from './ProductManager';\nimport AbroadEdit from './AbroadEdit';\nimport './Admin.css';\n\nconst Admin = () => {\n    const { register, handleSubmit, errors, setError, clearErrors } = useForm();\n    const { register: register2, watch: watch2 } = useForm(); // The menu form\n    const [isSignedIn, setIsSignedIn] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const action = watch2(\"action\");\n    let actionComponent = null;\n\n    const onSubmit = ({ email, password, persistence }) => {\n        setIsLoading(true);\n        let authPersistence;\n        if (persistence === true) {\n            authPersistence = firebase.auth.Auth.Persistence.LOCAL;\n        } else {\n            authPersistence = firebase.auth.Auth.Persistence.NONE\n        }\n        fireAuth.setPersistence(authPersistence)\n            .then(() => fireAuth.signInWithEmailAndPassword(email, password))\n            .then(setIsLoading(false))\n            .catch((error) => {\n                console.log(`Error code: ${error.code}`);\n                console.log(`Error message: ${error.message}`)\n                setError(\"login\", {\n                    type: \"manual\",\n                    message: \"אימייל או סיסמה שגויים\"\n                });\n            });\n    }\n\n    const signOut = () => {\n        fireAuth.signOut().then(function () {\n            console.log('signed out successfully')\n        }).catch(function (error) {\n            console.log(error)\n        });\n    }\n\n    useEffect(() => {\n        fireAuth.onAuthStateChanged(function (user) {\n            if (user) {\n                console.log('You are logged in!')\n                setIsSignedIn(user);\n            } else {\n                console.log('No user is logged in.')\n                setIsSignedIn(false);\n            }\n        });\n    }, [])\n\n    if (action === \"add product\" || action === \"update product\")\n        actionComponent = <ProductManager action={action} />\n    else if (action === \"set rally abroad\")\n        actionComponent = <AbroadEdit />\n\n\n    if (isSignedIn) {\n        return (\n            <article className='page-container'>\n                <h2>עמוד מנהל</h2>\n                <button className='button' onClick={signOut}>התנתק</button>\n                <form className=\"form--compressed\">\n                    <input name=\"action\" type=\"radio\" value=\"add product\" ref={register2} />\n                    <label>מוצר חדש</label>\n                    <input name=\"action\" type=\"radio\" value=\"update product\" ref={register2} />\n                    <label>עריכת מוצר</label>\n                    <input name=\"action\" type=\"radio\" value=\"set rally abroad\" ref={register2} />\n                    <label>עריכת תוכן ראליים בחו\"ל</label>\n                </form>\n                {actionComponent}\n            </article>\n        );\n    } else {\n        return (\n            <article className='page-container'>\n                <form onSubmit={handleSubmit(onSubmit)} className='form small'>\n                    <h2 style={{ padding: '0px 0px 10px' }}>כניסת מנהל</h2>\n                    <label>אימייל</label>\n                    <input type=\"text\" name=\"email\" ref={register({ required: true })} placeholder=\"אימייל\" />\n                    {errors.email && <span className=\"error\">יש להכניס אימייל</span>}\n                    <label>סיסמא</label>\n                    <input type='password' name=\"password\" ref={register({ required: true })} placeholder=\"סיסמא\" />\n                    {errors.password && <span className=\"error\">יש להכניס סיסמא</span>}\n                    <div>\n                        <input type=\"checkbox\" name=\"persistence\" defaultChecked={true} ref={register} />\n                        <label>הישאר מחובר</label>\n                    </div>\n                    {isLoading ?\n                        <Loader />\n                        : <input type=\"submit\" value=\"התחבר\" className=\"button\" onClick={() => clearErrors(\"login\")} />\n                    }\n                    {errors.login && <span className=\"error\">{errors.login.message}</span>}\n                </form>\n            </article>\n        );\n    }\n}\n\n\nexport default Admin;\n","import firebase from \"firebase/app\";\r\nimport \"firebase/database\"\r\nimport \"firebase/analytics\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/storage\"\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nlet firebaseConfigProduction = {\r\n    apiKey: \"AIzaSyDukwIPf4Dq16dqVbw4SeoyWugUnPIhYFE\",\r\n    authDomain: \"rally-trip.firebaseapp.com\",\r\n    databaseURL: \"https://rally-trip.firebaseio.com\",\r\n    projectId: \"rally-trip\",\r\n    storageBucket: \"rally-trip.appspot.com\",\r\n    messagingSenderId: \"981127527542\",\r\n    appId: \"1:981127527542:web:d6bee115407fff00b1f357\",\r\n    measurementId: \"G-3Q5HDZ04H2\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfigProduction);\r\nfirebase.analytics();\r\n\r\n// let firebaseConfigDevelopment = {\r\n//     apiKey: \"AIzaSyB2sTZWeYTKMQmoyMWKNr8pYil0ZOkrUrk\",\r\n//     authDomain: \"rally-trip-dev.firebaseapp.com\",\r\n//     databaseURL: \"https://rally-trip-dev.firebaseio.com\",\r\n//     projectId: \"rally-trip-dev\",\r\n//     storageBucket: \"rally-trip-dev.appspot.com\",\r\n//     messagingSenderId: \"45699978518\",\r\n//     appId: \"1:45699978518:web:e9ec13a6261e93ccafac37\",\r\n//     measurementId: \"G-RDDKEQ1EN7\"\r\n//   };\r\n\r\n// // Initialize Firebase\r\n// firebase.initializeApp(firebaseConfigDevelopment);\r\n// firebase.analytics();\r\n\r\nlet fireDb = firebase.database();\r\nlet fireAuth = firebase.auth();\r\nlet fireStorage = firebase.storage();\r\n\r\nexport { firebase, fireDb, fireAuth, fireStorage };","import React from 'react';\nimport Backdrop from '../BackDrop/BackDrop';\nimport './Loader.css';\n\n\nconst Loader = ({ fullscreen }) => {\n    if (fullscreen) {\n        return (\n            <>\n                <div className='loader fullscreen' > </div>\n                <Backdrop />\n            </>\n        );\n    } else {\n        return (\n            <div className='loader' />\n        );\n    }\n\n}\n\nexport default Loader;\n"],"sourceRoot":""}